server.port=8200

spring.cloud.gateway.routes[0].id=weatherModule
spring.cloud.gateway.routes[0].uri=lb://search
spring.cloud.gateway.routes[0].predicates[0]=Path=/weather/**

spring.cloud.gateway.routes[1].id=detailsModule
spring.cloud.gateway.routes[1].uri=lb://details
spring.cloud.gateway.routes[1].predicates[0]=Path=/details/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# directly access author controller in library service
spring.cloud.gateway.routes[2].id=authorModule
spring.cloud.gateway.routes[2].uri=lb://library
spring.cloud.gateway.routes[2].predicates[0]=Path=/authors/**

# access library service through search
spring.cloud.gateway.routes[3].id=libraryModule
spring.cloud.gateway.routes[3].uri=lb://search
spring.cloud.gateway.routes[3].predicates[0]=Path=/library/**

# directly access book controller in library service
spring.cloud.gateway.routes[4].id=authorModule
spring.cloud.gateway.routes[4].uri=lb://library
spring.cloud.gateway.routes[4].predicates[0]=Path=/books/**

spring.cloud.gateway.routes[5].id=securityModule
spring.cloud.gateway.routes[5].uri=lb://security
spring.cloud.gateway.routes[5].predicates[0]=Path=/security/**

spring.cloud.gateway.discovery.locator.enabled=true

myservice.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.registryFetchIntervalSeconds=xx
#ribbon.ServerListRefreshInterval

#actuator endpoint
management.endpoints.web.exposure.include=*

#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/